[{"title":"","url":"https://kongzhou.net/2021/04/01/初识虚拟化技术/","content":"<hr>\n<p>title：初识虚拟化技术<br>category：学习历程</p>\n<hr>\n<h3 id=\"初识虚拟化技术\"><a href=\"#初识虚拟化技术\" class=\"headerlink\" title=\"初识虚拟化技术\"></a>初识虚拟化技术</h3><h4 id=\"虚拟化技术的分类\"><a href=\"#虚拟化技术的分类\" class=\"headerlink\" title=\"虚拟化技术的分类\"></a>虚拟化技术的分类</h4><h5 id=\"全虚拟化技术\"><a href=\"#全虚拟化技术\" class=\"headerlink\" title=\"全虚拟化技术\"></a>全虚拟化技术</h5><p>完全虚拟化技术又叫硬件辅助虚拟化技术，最初所使用的虚拟化技术就是全虚拟化技术（Full Virtualization），它在虚拟机（VM）和硬件之间加了一个软件层–Hypervisor，或者叫做虚拟机监视器（VM）。hypervisor可直接与硬件交互</p>\n<ul>\n<li><p>hypervisor 直接运行在物理硬件之上 - KVM</p>\n</li>\n<li><p>hypervisor 运行在另一个操作系统中 - QEMU 和 WINE</p>\n<p><img src=\"C:\\Users\\34956\\AppData\\Roaming\\Typora\\typora-user-images\\image-20210401105316383.png\" alt=\"image-20210401105316383\"></p>\n</li>\n</ul>\n<p>#####　半虚拟化技术</p>\n<p>半虚拟化技术，也叫做准虚拟化技术。它就是在全虚拟化的基础上，把客户操作系统进行了修改，增加了一个专门的API，这个API可以将客户操作系统发出的指令进行最优化，既不需要hypervisor耗费一定的资源进行翻译工作，因此hypervisor的工作负担变得非常的小，因此整体的性能也有很大的提高。<strong>使用的很少</strong></p>\n<p><img src=\"C:\\Users\\34956\\AppData\\Roaming\\Typora\\typora-user-images\\image-20210401110930358.png\" alt=\"image-20210401110930358\"></p>\n<h4 id=\"架构分类\"><a href=\"#架构分类\" class=\"headerlink\" title=\"架构分类\"></a>架构分类</h4><h5 id=\"寄居架构\"><a href=\"#寄居架构\" class=\"headerlink\" title=\"寄居架构\"></a>寄居架构</h5><p>就是在操作系统之上安装和运行虚拟化技术，依赖于主机操作系统对设备的支持和物理资源的管理；</p>\n<p>优点：简单，便于实现</p>\n<p>缺点：无用消耗过多，稳定性低，安装和运行应用程序依赖于主机操作系统对设备的支持</p>\n<p>举例：GSX Server，VMware Server，Workstation</p>\n<h5 id=\"裸金属架构\"><a href=\"#裸金属架构\" class=\"headerlink\" title=\"裸金属架构\"></a>裸金属架构</h5><p>就是直接在硬件上面安装虚拟化软件，再在其上安装操作系统和应用，依赖虚拟层内核和服务器控制台进行管理</p>\n<p>优点：虚拟机不依赖于操作系统，可以支持多种操作系统，多种应用，更加灵活</p>\n<p>缺点：虚拟层内核开发困难较大</p>\n<p>举例：VMWare ESX Server</p>\n<p>参考链接：；<a href=\"https://www.bilibili.com/video/BV1NJ411K7pv\">https://www.bilibili.com/video/BV1NJ411K7pv</a></p>\n","categories":[],"tags":[]},{"title":"第一章基础知识","url":"https://kongzhou.net/2021/01/27/第一章基础知识/","content":"<h2 id=\"零碎知识点总结\"><a href=\"#零碎知识点总结\" class=\"headerlink\" title=\"零碎知识点总结\"></a>零碎知识点总结</h2><h3 id=\"1-1-3-逆向分析技术\"><a href=\"#1-1-3-逆向分析技术\" class=\"headerlink\" title=\"1.1.3 逆向分析技术\"></a>1.1.3 逆向分析技术</h3><ol>\n<li><p>通过软件使用说明和操作格式分析软件</p>\n</li>\n<li><p>静态分析技术</p>\n<p>常用工具：IDA</p>\n</li>\n<li><p>动态分析技术</p>\n<p>常用工具：OllyDbg、WinDbg</p>\n</li>\n</ol>\n<h3 id=\"1-2-1-ASCLL与Unicode字符集\"><a href=\"#1-2-1-ASCLL与Unicode字符集\" class=\"headerlink\" title=\"1.2.1 ASCLL与Unicode字符集\"></a>1.2.1 ASCLL与Unicode字符集</h3><ol>\n<li><p>ASCll：</p>\n<p>现代的ASCll是一个7位的编码标准，编码的取值范围是00h ~ 7Fh，包括26个大小写字母、10个数字（0 ~ 9）、32个符号、33个控制代码及空格，共128个代码</p>\n</li>\n<li><p>Unicode：</p>\n<p>Unicode是ASCLL字符编码的一个<strong>扩展</strong>，只不过在Windows中用2字节对其进行编码，因此被称为<strong>宽字符集（Widechars）</strong>。</p>\n<p>Unicode中，所有字符都是16位的，其中所有的7位ASCLL码都被扩充为16位<strong>（注意：高位扩充的是零）</strong></p>\n<p>例：”pediy”的ASCLL码是70h 65h 64h 69h 79h</p>\n<p>Unicode码的十六进制是0070h 0065h 0064h 0069h 0079h</p>\n</li>\n</ol>\n<h3 id=\"1-2-2-字符存储顺序\"><a href=\"#1-2-2-字符存储顺序\" class=\"headerlink\" title=\"1.2.2 字符存储顺序\"></a>1.2.2 字符存储顺序</h3><ul>\n<li>Big-endian：高位字节存入低地址，低位字节存入高地址</li>\n<li>Little-endian：低位字节存入低地址，高位字节存入高地址</li>\n</ul>\n<p>例：将12345678h写入以1000h开始的内存中</p>\n<table>\n<thead>\n<tr>\n<th align=\"center\">存放顺序</th>\n<th>1000h</th>\n<th>1001h</th>\n<th>1002h</th>\n<th>1003h</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">Big-endian</td>\n<td>12h</td>\n<td>34h</td>\n<td>56h</td>\n<td>78h</td>\n</tr>\n<tr>\n<td align=\"center\">Little-endian</td>\n<td>78h</td>\n<td>56h</td>\n<td>34h</td>\n<td>12h</td>\n</tr>\n</tbody></table>\n<p>因为网络协议也都是采用Big-endian方式传输数据的，所以有时也把Big-endian方式称为<strong>网络字节序</strong></p>\n<h3 id=\"1-3-1-API函数\"><a href=\"#1-3-1-API函数\" class=\"headerlink\" title=\"1.3.1 API函数\"></a>1.3.1 API函数</h3><p>API的英文全称为”Application Programming Interface”<strong>（应用程序编程接口）</strong></p>\n<p>在早期，Windows的主要部分只需在3个动态链接库中实现，他们分别代表Windows的3个主要子系统，叫做Kernel、User、GDI</p>\n<ul>\n<li>Kernel（由KERNEL32.DLL实现）：操作系统核心功能服务，包括进程与线程控制、内存管理、文件访问等</li>\n<li>User（由USER32.DLL实现）：负责处理用户接口，包括键盘和鼠标输入、窗口和菜单管理等</li>\n<li>GDI（由GDI32.DLL实现）：图形设备接口，允许程序在屏幕和打印机上显示文本和图形</li>\n</ul>\n<p>除上述模块，Windows提供了其他DLL以支持更多的功能，包括对象安全性、注册表操作（ADVAPI32.DLL）、通用控件（COMCTL32.DLL）、公共对话框（COMDLG32.DLL）、用户界面外壳（SHELL32.DLL）和网络（NETAPI32.DLL）</p>\n<h3 id=\"1-3-4-虚拟内存\"><a href=\"#1-3-4-虚拟内存\" class=\"headerlink\" title=\"1.3.4 虚拟内存\"></a>1.3.4 虚拟内存</h3><ul>\n<li>应用程序不会直接访问物理地址</li>\n<li>虚拟内存管理器通过虚拟地址的访问请求来控制所有的物理地址访问</li>\n<li>每个应用程序都有独立的4GB寻址空间，不同应用程序的地址空间是彼此隔离的</li>\n<li>DLL程序没有“私有”空间，他们总是被映射到其他程序的地址空间中，作为其他应用程序的一部分运行。其原因是：如果DLL不与其他程序处于同一个地址空间，应用程序就无法调用它</li>\n</ul>\n","categories":["《加密与解密》"],"tags":[]},{"title":"docker的简单使用","url":"https://kongzhou.net/2020/12/17/docker的简单使用/","content":"<h1 id=\"docker的简单使用\"><a href=\"#docker的简单使用\" class=\"headerlink\" title=\"docker的简单使用\"></a>docker的简单使用</h1><h3 id=\"学习地址：https-www-bilibili-com-video-BV1og4y1q7M4\"><a href=\"#学习地址：https-www-bilibili-com-video-BV1og4y1q7M4\" class=\"headerlink\" title=\"学习地址：https://www.bilibili.com/video/BV1og4y1q7M4?\"></a>学习地址：<a href=\"https://www.bilibili.com/video/BV1og4y1q7M4\">https://www.bilibili.com/video/BV1og4y1q7M4</a>?</h3><h3 id=\"跟着视频学习的，一点点跟着视频打了一遍\"><a href=\"#跟着视频学习的，一点点跟着视频打了一遍\" class=\"headerlink\" title=\"跟着视频学习的，一点点跟着视频打了一遍\"></a>跟着视频学习的，一点点跟着视频打了一遍</h3><h2 id=\"帮助命令\"><a href=\"#帮助命令\" class=\"headerlink\" title=\"帮助命令\"></a>帮助命令</h2><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker version    # 显示docker的版本信息</span><br><span class=\"line\">docker info       # 显示docker的系统信息，包括镜像和容器的数量</span><br><span class=\"line\">docker 命令 --help # 帮助命令</span><br></pre></td></tr></table></figure>\n\n<p>帮助文档地址：<a href=\"https://docs.docker.com/engine/reference\">https://docs.docker.com/engine/reference</a></p>\n<h2 id=\"镜像命令\"><a href=\"#镜像命令\" class=\"headerlink\" title=\"镜像命令\"></a>镜像命令</h2><h3 id=\"查看所有本地主机上的镜像\"><a href=\"#查看所有本地主机上的镜像\" class=\"headerlink\" title=\"查看所有本地主机上的镜像\"></a>查看所有本地主机上的镜像</h3><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">root@kongzhou-virtual-machine:~# docker images</span><br><span class=\"line\">REPOSITORY           TAG       IMAGE ID       CREATED         SIZE</span><br><span class=\"line\">hello-world          latest    bf756fb1ae65   11 months ago   13.3kB</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> 解释</span></span><br><span class=\"line\">REPOSITORY 镜像的仓库源</span><br><span class=\"line\">TAG        镜像的标签</span><br><span class=\"line\">IMAGE ID   镜像的id</span><br><span class=\"line\">CREATED    镜像的创建时间</span><br><span class=\"line\">SIZE       镜像的大小</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> 可选项</span></span><br><span class=\"line\">  -a, --all      # 列出所有镜像       </span><br><span class=\"line\">  -q, --quiet    # 只显示镜像的id</span><br></pre></td></tr></table></figure>\n\n\n\n<h3 id=\"搜索镜像\"><a href=\"#搜索镜像\" class=\"headerlink\" title=\"搜索镜像\"></a>搜索镜像</h3><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">root@kongzhou-virtual-machine:~# docker search mysql</span><br><span class=\"line\">NAME                              DESCRIPTION                                     STARS     OFFICIAL   AUTOMATED</span><br><span class=\"line\">mysql                             MySQL is a widely used, open-source relation…   10269     [OK]       </span><br><span class=\"line\">mariadb                           MariaDB is a community-developed fork of MyS…   3794      [OK] </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> 可选项，通过STAR过滤</span></span><br><span class=\"line\">docker search mysql --filter=STARs=3000</span><br><span class=\"line\"></span><br><span class=\"line\">root@kongzhou-virtual-machine:~# docker search mysql --filter=STARs=3000</span><br><span class=\"line\">NAME      DESCRIPTION                                     STARS     OFFICIAL   AUTOMATED</span><br><span class=\"line\">mysql     MySQL is a widely used, open-source relation…   10269     [OK]       </span><br><span class=\"line\">mariadb   MariaDB is a community-developed fork of MyS…   3794      [OK]   </span><br></pre></td></tr></table></figure>\n\n<h3 id=\"下载镜像\"><a href=\"#下载镜像\" class=\"headerlink\" title=\"下载镜像\"></a>下载镜像</h3><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> 下载镜像 docker pull 镜像名[:tag] 指定版本下载，但下载版本必须docker中有</span></span><br><span class=\"line\"></span><br><span class=\"line\">root@kongzhou-virtual-machine:~# docker pull mysql </span><br><span class=\"line\">Using default tag: latest # 默认下载最新版</span><br><span class=\"line\">latest: Pulling from library/mysql</span><br><span class=\"line\">6ec7b7d162b2: Pull complete # 分层下载，docker images的核心 联合文件系统</span><br><span class=\"line\">fedd960d3481: Pull complete </span><br><span class=\"line\">7ab947313861: Pull complete </span><br><span class=\"line\">64f92f19e638: Pull complete </span><br><span class=\"line\">3e80b17bff96: Pull complete </span><br><span class=\"line\">014e976799f9: Pull complete </span><br><span class=\"line\">59ae84fee1b3: Pull complete </span><br><span class=\"line\">ffe10de703ea: Pull complete </span><br><span class=\"line\">657af6d90c83: Pull complete </span><br><span class=\"line\">98bfb480322c: Pull complete </span><br><span class=\"line\">9f2c4202ac29: Pull complete </span><br><span class=\"line\">a369b92bfc99: Pull complete </span><br><span class=\"line\">Digest: sha256:365e891b22abd3336d65baefc475b4a9a1e29a01a7b6b5be04367fcc9f373bb7  # 签名</span><br><span class=\"line\">Status: Downloaded newer image for mysql:latest</span><br><span class=\"line\">docker.io/library/mysql:latest # 真实地址</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> 两者相同</span></span><br><span class=\"line\">docker pull mysql</span><br><span class=\"line\">docker.io/library/mysql:latest</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> docker pull mysql:5.7 指定版本下载</span></span><br><span class=\"line\">root@kongzhou-virtual-machine:~# docker pull mysql:5.7</span><br><span class=\"line\">5.7: Pulling from library/mysql</span><br><span class=\"line\">6ec7b7d162b2: Already exists  # 很明显显示已经存在，因为上面下载的mysql中已经下载过这些的文件，可以共用，非常方便</span><br><span class=\"line\">fedd960d3481: Already exists </span><br><span class=\"line\">7ab947313861: Already exists </span><br><span class=\"line\">64f92f19e638: Already exists </span><br><span class=\"line\">3e80b17bff96: Already exists </span><br><span class=\"line\">014e976799f9: Already exists </span><br><span class=\"line\">59ae84fee1b3: Already exists </span><br><span class=\"line\">7d1da2a18e2e: Pull complete </span><br><span class=\"line\">301a28b700b9: Pull complete </span><br><span class=\"line\">979b389fc71f: Pull complete </span><br><span class=\"line\">403f729b1bad: Pull complete </span><br><span class=\"line\">Digest: sha256:d4ca82cee68dce98aa72a1c48b5ef5ce9f1538265831132187871b78e768aed1</span><br><span class=\"line\">Status: Downloaded newer image for mysql:5.7</span><br><span class=\"line\">docker.io/library/mysql:5.7</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"删除镜像\"><a href=\"#删除镜像\" class=\"headerlink\" title=\"删除镜像\"></a>删除镜像</h3><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker rmi -f 容器id                 # 删除指定容器</span><br><span class=\"line\">docker rmi -f 容器id 容器id 容器id  \t# 删除多个容器</span><br><span class=\"line\">docker rmi -f $(docker images -aq)  # 删除全部的容器</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"容器命令\"><a href=\"#容器命令\" class=\"headerlink\" title=\"容器命令\"></a>容器命令</h2><p><strong>说明：我们有了镜像才可以创建容器，linux，下载一个镜像测试学习</strong></p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker pull centos</span><br></pre></td></tr></table></figure>\n\n<p><strong>新建容器并启动</strong></p>\n<h3 id=\"启动镜像\"><a href=\"#启动镜像\" class=\"headerlink\" title=\"启动镜像\"></a>启动镜像</h3><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker run [可选参数] image</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> 参数说明</span></span><br><span class=\"line\">--name=&quot;Name&quot;   容器名字 pwn1 pwn2 用来区分容器</span><br><span class=\"line\">-d              后台方式运行</span><br><span class=\"line\">-it             使用交互方式运行</span><br><span class=\"line\">-p              指定容器端口 -p 8080:8080</span><br><span class=\"line\">   -p ip:主机端口:容器端口</span><br><span class=\"line\">   -p 主机端口:容器端口(常用)</span><br><span class=\"line\">   -p 容器端口</span><br><span class=\"line\">   容器端口</span><br><span class=\"line\">-P               随机指定端口</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> 测试，启动并进入容器</span></span><br><span class=\"line\">root@kongzhou-virtual-machine:~# docker run -it centos /bin/bash</span><br><span class=\"line\">[root@0b0a0a20f059 /]# ls</span><br><span class=\"line\">bin  etc   lib\t  lost+found  mnt  proc  run   srv  tmp  var</span><br><span class=\"line\">dev  home  lib64  media       opt  root  sbin  sys  usr</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> 从容器这种返回主机</span></span><br><span class=\"line\">[root@0b0a0a20f059 /]# exit</span><br><span class=\"line\">exit</span><br><span class=\"line\">root@kongzhou-virtual-machine:~# </span><br></pre></td></tr></table></figure>\n\n<h3 id=\"列出所有的运行的容器\"><a href=\"#列出所有的运行的容器\" class=\"headerlink\" title=\"列出所有的运行的容器\"></a>列出所有的运行的容器</h3><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker ps 命令 </span><br><span class=\"line\">-a    #列出当前正在运行的容器</span><br><span class=\"line\">-n=?  #显示最近?个创建的容器</span><br><span class=\"line\">-q    #只显示容器的编号</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"退出容器\"><a href=\"#退出容器\" class=\"headerlink\" title=\"退出容器\"></a>退出容器</h3><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">exit          # 直接容器停止并退出</span><br><span class=\"line\">Ctrl + P + Q  # 容器不停止退出</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"删除容器\"><a href=\"#删除容器\" class=\"headerlink\" title=\"删除容器\"></a>删除容器</h3><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker rm 容器id                # 删除指定容器. 不能删除正在运行的容器，如果需要强制删除 rm -f</span><br><span class=\"line\">docker rm -f $(docker ps -aq)  # 删除所有容器</span><br><span class=\"line\">docker ps -a q|xargs docker rm # 删除所有容器</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"启动和停止容器的操作\"><a href=\"#启动和停止容器的操作\" class=\"headerlink\" title=\"启动和停止容器的操作\"></a>启动和停止容器的操作</h3><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker start 容器id    # 启动容器</span><br><span class=\"line\">docker restart 容器id  # 重启容器</span><br><span class=\"line\">docker stop 容器id     # 停止当前正在运行的容器</span><br><span class=\"line\">docker kill 容器id     # 强制停止当前容器</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"常用其他命令\"><a href=\"#常用其他命令\" class=\"headerlink\" title=\"常用其他命令\"></a>常用其他命令</h3><h4 id=\"后台启动容器\"><a href=\"#后台启动容器\" class=\"headerlink\" title=\"后台启动容器\"></a>后台启动容器</h4><p><img src=\"C:%5CUsers%5Ckongzhou%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20210118160535997.png\" alt=\"image-20210118160535997\"></p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> 命令 docker run -d 镜像名</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> 问题docker ps，发现centos停止了</span></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> 常见的坑：docker使用后台运行，就必须要有一个前台进程，docker发现没有应用，就会自动停止</span></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> nginx，容器启动后，发现自己没有提供服务，就是没有程序了</span></span><br></pre></td></tr></table></figure>\n\n<h4 id=\"查看日志\"><a href=\"#查看日志\" class=\"headerlink\" title=\"查看日志\"></a>查看日志</h4><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker logs -f -t --tail 容器id  # 没有日志</span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> 自己编写一段 shell脚本</span></span><br><span class=\"line\">root@kongzhou-virtual-machine:~# docker run -d centos /bin/sh -C &quot;while true;do echo kongzhou;sleep 1;done&quot;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> root@kongzhou-virtual-machine:~<span class=\"comment\"># docker ps</span></span></span><br><span class=\"line\">CONTAINER ID   IMAGE     COMMAND                  CREATED          STATUS          PORTS     NAMES</span><br><span class=\"line\">3cf6fc9bc61c   centos    &quot;/bin/sh -c &#x27;while t…&quot;   15 seconds ago   Up 13 seconds             agitated_visvesvaraya</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> 显示日志</span></span><br><span class=\"line\"> -tf           # 显示日志</span><br><span class=\"line\"> --tail number # 要显示日志条数</span><br><span class=\"line\"> </span><br><span class=\"line\"> root@kongzhou-virtual-machine:~# docker logs -f -t --tail 10 3cf6fc9bc61c </span><br></pre></td></tr></table></figure>\n\n<h4 id=\"查看容器中进程信息\"><a href=\"#查看容器中进程信息\" class=\"headerlink\" title=\"查看容器中进程信息\"></a>查看容器中进程信息</h4><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> docker top 容器id</span></span><br><span class=\"line\">root@kongzhou-virtual-machine:~# docker top 3cf6fc9bc61c </span><br><span class=\"line\">UID      PID        PPID        C         STIME      TTY        TIME       CMD</span><br><span class=\"line\">root    53105      53082        0        16:14        ?        00:00:00   /bin/sh -c while true;do echo kongzhou;sleep 1;done</span><br><span class=\"line\">root    53844      53105        0        16:25        ?        00:00:00   /usr/bin/coreutils --coreutils-prog-shebang=sleep /usr/bin/sleep 1        </span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h4 id=\"查看镜像的元数据\"><a href=\"#查看镜像的元数据\" class=\"headerlink\" title=\"查看镜像的元数据\"></a>查看镜像的元数据</h4><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br><span class=\"line\">167</span><br><span class=\"line\">168</span><br><span class=\"line\">169</span><br><span class=\"line\">170</span><br><span class=\"line\">171</span><br><span class=\"line\">172</span><br><span class=\"line\">173</span><br><span class=\"line\">174</span><br><span class=\"line\">175</span><br><span class=\"line\">176</span><br><span class=\"line\">177</span><br><span class=\"line\">178</span><br><span class=\"line\">179</span><br><span class=\"line\">180</span><br><span class=\"line\">181</span><br><span class=\"line\">182</span><br><span class=\"line\">183</span><br><span class=\"line\">184</span><br><span class=\"line\">185</span><br><span class=\"line\">186</span><br><span class=\"line\">187</span><br><span class=\"line\">188</span><br><span class=\"line\">189</span><br><span class=\"line\">190</span><br><span class=\"line\">191</span><br><span class=\"line\">192</span><br><span class=\"line\">193</span><br><span class=\"line\">194</span><br><span class=\"line\">195</span><br><span class=\"line\">196</span><br><span class=\"line\">197</span><br><span class=\"line\">198</span><br><span class=\"line\">199</span><br><span class=\"line\">200</span><br><span class=\"line\">201</span><br><span class=\"line\">202</span><br><span class=\"line\">203</span><br><span class=\"line\">204</span><br><span class=\"line\">205</span><br><span class=\"line\">206</span><br><span class=\"line\">207</span><br><span class=\"line\">208</span><br><span class=\"line\">209</span><br><span class=\"line\">210</span><br><span class=\"line\">211</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> 命令 docker inspect 容器id</span></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> 测试</span></span><br><span class=\"line\">root@kongzhou-virtual-machine:~# docker inspect 3cf6fc9bc61c</span><br><span class=\"line\">[</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        &quot;Id&quot;: &quot;3cf6fc9bc61c00647b95b88f6a8af9e35eabd06c7fdc46278ee38da237050410&quot;,</span><br><span class=\"line\">        &quot;Created&quot;: &quot;2021-01-18T08:14:46.818963923Z&quot;,</span><br><span class=\"line\">        &quot;Path&quot;: &quot;/bin/sh&quot;,</span><br><span class=\"line\">        &quot;Args&quot;: [</span><br><span class=\"line\">            &quot;-c&quot;,</span><br><span class=\"line\">            &quot;while true;do echo kongzhou;sleep 1;done&quot;</span><br><span class=\"line\">        ],</span><br><span class=\"line\">        &quot;State&quot;: &#123;</span><br><span class=\"line\">            &quot;Status&quot;: &quot;running&quot;,</span><br><span class=\"line\">            &quot;Running&quot;: true,</span><br><span class=\"line\">            &quot;Paused&quot;: false,</span><br><span class=\"line\">            &quot;Restarting&quot;: false,</span><br><span class=\"line\">            &quot;OOMKilled&quot;: false,</span><br><span class=\"line\">            &quot;Dead&quot;: false,</span><br><span class=\"line\">            &quot;Pid&quot;: 53105,</span><br><span class=\"line\">            &quot;ExitCode&quot;: 0,</span><br><span class=\"line\">            &quot;Error&quot;: &quot;&quot;,</span><br><span class=\"line\">            &quot;StartedAt&quot;: &quot;2021-01-18T08:14:47.428211885Z&quot;,</span><br><span class=\"line\">            &quot;FinishedAt&quot;: &quot;0001-01-01T00:00:00Z&quot;</span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\">        &quot;Image&quot;: &quot;sha256:300e315adb2f96afe5f0b2780b87f28ae95231fe3bdd1e16b9ba606307728f55&quot;,</span><br><span class=\"line\">        &quot;ResolvConfPath&quot;: &quot;/var/lib/docker/containers/3cf6fc9bc61c00647b95b88f6a8af9e35eabd06c7fdc46278ee38da237050410/resolv.conf&quot;,</span><br><span class=\"line\">        &quot;HostnamePath&quot;: &quot;/var/lib/docker/containers/3cf6fc9bc61c00647b95b88f6a8af9e35eabd06c7fdc46278ee38da237050410/hostname&quot;,</span><br><span class=\"line\">        &quot;HostsPath&quot;: &quot;/var/lib/docker/containers/3cf6fc9bc61c00647b95b88f6a8af9e35eabd06c7fdc46278ee38da237050410/hosts&quot;,</span><br><span class=\"line\">        &quot;LogPath&quot;: &quot;/var/lib/docker/containers/3cf6fc9bc61c00647b95b88f6a8af9e35eabd06c7fdc46278ee38da237050410/3cf6fc9bc61c00647b95b88f6a8af9e35eabd06c7fdc46278ee38da237050410-json.log&quot;,</span><br><span class=\"line\">        &quot;Name&quot;: &quot;/agitated_visvesvaraya&quot;,</span><br><span class=\"line\">        &quot;RestartCount&quot;: 0,</span><br><span class=\"line\">        &quot;Driver&quot;: &quot;overlay2&quot;,</span><br><span class=\"line\">        &quot;Platform&quot;: &quot;linux&quot;,</span><br><span class=\"line\">        &quot;MountLabel&quot;: &quot;&quot;,</span><br><span class=\"line\">        &quot;ProcessLabel&quot;: &quot;&quot;,</span><br><span class=\"line\">        &quot;AppArmorProfile&quot;: &quot;docker-default&quot;,</span><br><span class=\"line\">        &quot;ExecIDs&quot;: null,</span><br><span class=\"line\">        &quot;HostConfig&quot;: &#123;</span><br><span class=\"line\">            &quot;Binds&quot;: null,</span><br><span class=\"line\">            &quot;ContainerIDFile&quot;: &quot;&quot;,</span><br><span class=\"line\">            &quot;LogConfig&quot;: &#123;</span><br><span class=\"line\">                &quot;Type&quot;: &quot;json-file&quot;,</span><br><span class=\"line\">                &quot;Config&quot;: &#123;&#125;</span><br><span class=\"line\">            &#125;,</span><br><span class=\"line\">            &quot;NetworkMode&quot;: &quot;default&quot;,</span><br><span class=\"line\">            &quot;PortBindings&quot;: &#123;&#125;,</span><br><span class=\"line\">            &quot;RestartPolicy&quot;: &#123;</span><br><span class=\"line\">                &quot;Name&quot;: &quot;no&quot;,</span><br><span class=\"line\">                &quot;MaximumRetryCount&quot;: 0</span><br><span class=\"line\">            &#125;,</span><br><span class=\"line\">            &quot;AutoRemove&quot;: false,</span><br><span class=\"line\">            &quot;VolumeDriver&quot;: &quot;&quot;,</span><br><span class=\"line\">            &quot;VolumesFrom&quot;: null,</span><br><span class=\"line\">            &quot;CapAdd&quot;: null,</span><br><span class=\"line\">            &quot;CapDrop&quot;: null,</span><br><span class=\"line\">            &quot;CgroupnsMode&quot;: &quot;host&quot;,</span><br><span class=\"line\">            &quot;Dns&quot;: [],</span><br><span class=\"line\">            &quot;DnsOptions&quot;: [],</span><br><span class=\"line\">            &quot;DnsSearch&quot;: [],</span><br><span class=\"line\">            &quot;ExtraHosts&quot;: null,</span><br><span class=\"line\">            &quot;GroupAdd&quot;: null,</span><br><span class=\"line\">            &quot;IpcMode&quot;: &quot;private&quot;,</span><br><span class=\"line\">            &quot;Cgroup&quot;: &quot;&quot;,</span><br><span class=\"line\">            &quot;Links&quot;: null,</span><br><span class=\"line\">            &quot;OomScoreAdj&quot;: 0,</span><br><span class=\"line\">            &quot;PidMode&quot;: &quot;&quot;,</span><br><span class=\"line\">            &quot;Privileged&quot;: false,</span><br><span class=\"line\">            &quot;PublishAllPorts&quot;: false,</span><br><span class=\"line\">            &quot;ReadonlyRootfs&quot;: false,</span><br><span class=\"line\">            &quot;SecurityOpt&quot;: null,</span><br><span class=\"line\">            &quot;UTSMode&quot;: &quot;&quot;,</span><br><span class=\"line\">            &quot;UsernsMode&quot;: &quot;&quot;,</span><br><span class=\"line\">            &quot;ShmSize&quot;: 67108864,</span><br><span class=\"line\">            &quot;Runtime&quot;: &quot;runc&quot;,</span><br><span class=\"line\">            &quot;ConsoleSize&quot;: [</span><br><span class=\"line\">                0,</span><br><span class=\"line\">                0</span><br><span class=\"line\">            ],</span><br><span class=\"line\">            &quot;Isolation&quot;: &quot;&quot;,</span><br><span class=\"line\">            &quot;CpuShares&quot;: 0,</span><br><span class=\"line\">            &quot;Memory&quot;: 0,</span><br><span class=\"line\">            &quot;NanoCpus&quot;: 0,</span><br><span class=\"line\">            &quot;CgroupParent&quot;: &quot;&quot;,</span><br><span class=\"line\">            &quot;BlkioWeight&quot;: 0,</span><br><span class=\"line\">            &quot;BlkioWeightDevice&quot;: [],</span><br><span class=\"line\">            &quot;BlkioDeviceReadBps&quot;: null,</span><br><span class=\"line\">            &quot;BlkioDeviceWriteBps&quot;: null,</span><br><span class=\"line\">            &quot;BlkioDeviceReadIOps&quot;: null,</span><br><span class=\"line\">            &quot;BlkioDeviceWriteIOps&quot;: null,</span><br><span class=\"line\">            &quot;CpuPeriod&quot;: 0,</span><br><span class=\"line\">            &quot;CpuQuota&quot;: 0,</span><br><span class=\"line\">            &quot;CpuRealtimePeriod&quot;: 0,</span><br><span class=\"line\">            &quot;CpuRealtimeRuntime&quot;: 0,</span><br><span class=\"line\">            &quot;CpusetCpus&quot;: &quot;&quot;,</span><br><span class=\"line\">            &quot;CpusetMems&quot;: &quot;&quot;,</span><br><span class=\"line\">            &quot;Devices&quot;: [],</span><br><span class=\"line\">            &quot;DeviceCgroupRules&quot;: null,</span><br><span class=\"line\">            &quot;DeviceRequests&quot;: null,</span><br><span class=\"line\">            &quot;KernelMemory&quot;: 0,</span><br><span class=\"line\">            &quot;KernelMemoryTCP&quot;: 0,</span><br><span class=\"line\">            &quot;MemoryReservation&quot;: 0,</span><br><span class=\"line\">            &quot;MemorySwap&quot;: 0,</span><br><span class=\"line\">            &quot;MemorySwappiness&quot;: null,</span><br><span class=\"line\">            &quot;OomKillDisable&quot;: false,</span><br><span class=\"line\">            &quot;PidsLimit&quot;: null,</span><br><span class=\"line\">            &quot;Ulimits&quot;: null,</span><br><span class=\"line\">            &quot;CpuCount&quot;: 0,</span><br><span class=\"line\">            &quot;CpuPercent&quot;: 0,</span><br><span class=\"line\">            &quot;IOMaximumIOps&quot;: 0,</span><br><span class=\"line\">            &quot;IOMaximumBandwidth&quot;: 0,</span><br><span class=\"line\">            &quot;MaskedPaths&quot;: [</span><br><span class=\"line\">                &quot;/proc/asound&quot;,</span><br><span class=\"line\">                &quot;/proc/acpi&quot;,</span><br><span class=\"line\">                &quot;/proc/kcore&quot;,</span><br><span class=\"line\">                &quot;/proc/keys&quot;,</span><br><span class=\"line\">                &quot;/proc/latency_stats&quot;,</span><br><span class=\"line\">                &quot;/proc/timer_list&quot;,</span><br><span class=\"line\">                &quot;/proc/timer_stats&quot;,</span><br><span class=\"line\">                &quot;/proc/sched_debug&quot;,</span><br><span class=\"line\">                &quot;/proc/scsi&quot;,</span><br><span class=\"line\">                &quot;/sys/firmware&quot;</span><br><span class=\"line\">            ],</span><br><span class=\"line\">            &quot;ReadonlyPaths&quot;: [</span><br><span class=\"line\">                &quot;/proc/bus&quot;,</span><br><span class=\"line\">                &quot;/proc/fs&quot;,</span><br><span class=\"line\">                &quot;/proc/irq&quot;,</span><br><span class=\"line\">                &quot;/proc/sys&quot;,</span><br><span class=\"line\">                &quot;/proc/sysrq-trigger&quot;</span><br><span class=\"line\">            ]</span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\">        &quot;GraphDriver&quot;: &#123;</span><br><span class=\"line\">            &quot;Data&quot;: &#123;</span><br><span class=\"line\">                &quot;LowerDir&quot;: &quot;/var/lib/docker/overlay2/ace00a02f3d7912e0a1880237c628ebe03694655b08d2414359cffad7d093123-init/diff:/var/lib/docker/overlay2/6046f44170c775dd8216fb38c64d14f468d165d0271a044c16cd7a1e09e5046d/diff&quot;,</span><br><span class=\"line\">                &quot;MergedDir&quot;: &quot;/var/lib/docker/overlay2/ace00a02f3d7912e0a1880237c628ebe03694655b08d2414359cffad7d093123/merged&quot;,</span><br><span class=\"line\">                &quot;UpperDir&quot;: &quot;/var/lib/docker/overlay2/ace00a02f3d7912e0a1880237c628ebe03694655b08d2414359cffad7d093123/diff&quot;,</span><br><span class=\"line\">                &quot;WorkDir&quot;: &quot;/var/lib/docker/overlay2/ace00a02f3d7912e0a1880237c628ebe03694655b08d2414359cffad7d093123/work&quot;</span><br><span class=\"line\">            &#125;,</span><br><span class=\"line\">            &quot;Name&quot;: &quot;overlay2&quot;</span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\">        &quot;Mounts&quot;: [],</span><br><span class=\"line\">        &quot;Config&quot;: &#123;</span><br><span class=\"line\">            &quot;Hostname&quot;: &quot;3cf6fc9bc61c&quot;,</span><br><span class=\"line\">            &quot;Domainname&quot;: &quot;&quot;,</span><br><span class=\"line\">            &quot;User&quot;: &quot;&quot;,</span><br><span class=\"line\">            &quot;AttachStdin&quot;: false,</span><br><span class=\"line\">            &quot;AttachStdout&quot;: false,</span><br><span class=\"line\">            &quot;AttachStderr&quot;: false,</span><br><span class=\"line\">            &quot;Tty&quot;: false,</span><br><span class=\"line\">            &quot;OpenStdin&quot;: false,</span><br><span class=\"line\">            &quot;StdinOnce&quot;: false,</span><br><span class=\"line\">            &quot;Env&quot;: [</span><br><span class=\"line\">                &quot;PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin&quot;</span><br><span class=\"line\">            ],</span><br><span class=\"line\">            &quot;Cmd&quot;: [</span><br><span class=\"line\">                &quot;/bin/sh&quot;,</span><br><span class=\"line\">                &quot;-c&quot;,</span><br><span class=\"line\">                &quot;while true;do echo kongzhou;sleep 1;done&quot;</span><br><span class=\"line\">            ],</span><br><span class=\"line\">            &quot;Image&quot;: &quot;centos&quot;,</span><br><span class=\"line\">            &quot;Volumes&quot;: null,</span><br><span class=\"line\">            &quot;WorkingDir&quot;: &quot;&quot;,</span><br><span class=\"line\">            &quot;Entrypoint&quot;: null,</span><br><span class=\"line\">            &quot;OnBuild&quot;: null,</span><br><span class=\"line\">            &quot;Labels&quot;: &#123;</span><br><span class=\"line\">                &quot;org.label-schema.build-date&quot;: &quot;20201204&quot;,</span><br><span class=\"line\">                &quot;org.label-schema.license&quot;: &quot;GPLv2&quot;,</span><br><span class=\"line\">                &quot;org.label-schema.name&quot;: &quot;CentOS Base Image&quot;,</span><br><span class=\"line\">                &quot;org.label-schema.schema-version&quot;: &quot;1.0&quot;,</span><br><span class=\"line\">                &quot;org.label-schema.vendor&quot;: &quot;CentOS&quot;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\">        &quot;NetworkSettings&quot;: &#123;</span><br><span class=\"line\">            &quot;Bridge&quot;: &quot;&quot;,</span><br><span class=\"line\">            &quot;SandboxID&quot;: &quot;ff8484bea0cc6734e492713115ca7c2c3e224d0d88dde3bd864e031c18bf38b6&quot;,</span><br><span class=\"line\">            &quot;HairpinMode&quot;: false,</span><br><span class=\"line\">            &quot;LinkLocalIPv6Address&quot;: &quot;&quot;,</span><br><span class=\"line\">            &quot;LinkLocalIPv6PrefixLen&quot;: 0,</span><br><span class=\"line\">            &quot;Ports&quot;: &#123;&#125;,</span><br><span class=\"line\">            &quot;SandboxKey&quot;: &quot;/var/run/docker/netns/ff8484bea0cc&quot;,</span><br><span class=\"line\">            &quot;SecondaryIPAddresses&quot;: null,</span><br><span class=\"line\">            &quot;SecondaryIPv6Addresses&quot;: null,</span><br><span class=\"line\">            &quot;EndpointID&quot;: &quot;0adfef4b6d95c9578bdd03c16773fe4071cc0ad124f701eac4c546433442fc83&quot;,</span><br><span class=\"line\">            &quot;Gateway&quot;: &quot;172.17.0.1&quot;,</span><br><span class=\"line\">            &quot;GlobalIPv6Address&quot;: &quot;&quot;,</span><br><span class=\"line\">            &quot;GlobalIPv6PrefixLen&quot;: 0,</span><br><span class=\"line\">            &quot;IPAddress&quot;: &quot;172.17.0.2&quot;,</span><br><span class=\"line\">            &quot;IPPrefixLen&quot;: 16,</span><br><span class=\"line\">            &quot;IPv6Gateway&quot;: &quot;&quot;,</span><br><span class=\"line\">            &quot;MacAddress&quot;: &quot;02:42:ac:11:00:02&quot;,</span><br><span class=\"line\">            &quot;Networks&quot;: &#123;</span><br><span class=\"line\">                &quot;bridge&quot;: &#123;</span><br><span class=\"line\">                    &quot;IPAMConfig&quot;: null,</span><br><span class=\"line\">                    &quot;Links&quot;: null,</span><br><span class=\"line\">                    &quot;Aliases&quot;: null,</span><br><span class=\"line\">                    &quot;NetworkID&quot;: &quot;f989d926b61313d32ba7442e1e69f4d7498f0c8e28818de42af301fc823b0386&quot;,</span><br><span class=\"line\">                    &quot;EndpointID&quot;: &quot;0adfef4b6d95c9578bdd03c16773fe4071cc0ad124f701eac4c546433442fc83&quot;,</span><br><span class=\"line\">                    &quot;Gateway&quot;: &quot;172.17.0.1&quot;,</span><br><span class=\"line\">                    &quot;IPAddress&quot;: &quot;172.17.0.2&quot;,</span><br><span class=\"line\">                    &quot;IPPrefixLen&quot;: 16,</span><br><span class=\"line\">                    &quot;IPv6Gateway&quot;: &quot;&quot;,</span><br><span class=\"line\">                    &quot;GlobalIPv6Address&quot;: &quot;&quot;,</span><br><span class=\"line\">                    &quot;GlobalIPv6PrefixLen&quot;: 0,</span><br><span class=\"line\">                    &quot;MacAddress&quot;: &quot;02:42:ac:11:00:02&quot;,</span><br><span class=\"line\">                    &quot;DriverOpts&quot;: null</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">]</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h4 id=\"进入当前正在运行的容器\"><a href=\"#进入当前正在运行的容器\" class=\"headerlink\" title=\"进入当前正在运行的容器\"></a>进入当前正在运行的容器</h4><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> 我们通常容器都是使用后台方式运行的，需要进入容器，修改一些配置</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> 命令</span></span><br><span class=\"line\">docker exec -it 容器id bashshell # 进入容器后开启一个新的终端，可以在里面操作（常用）</span><br><span class=\"line\"></span><br><span class=\"line\">docker attach 容器id  # 进入容器正在执行的终端，不会启动新的进程</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"从容器内拷贝文件到主机上\"><a href=\"#从容器内拷贝文件到主机上\" class=\"headerlink\" title=\"从容器内拷贝文件到主机上\"></a>从容器内拷贝文件到主机上</h4><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker cp 容器id:容器内路径 目的的主机路径</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> 查看容器id</span></span><br><span class=\"line\">root@kongzhou-virtual-machine:/home# docker ps</span><br><span class=\"line\">CONTAINER ID   IMAGE     COMMAND       CREATED         STATUS         PORTS     NAMES</span><br><span class=\"line\">3e26eda4d0d9   centos    &quot;/bin/bash&quot;   4 minutes ago   Up 4 minutes             pensive_bassi</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> 进入docker容器内部</span></span><br><span class=\"line\">root@kongzhou-virtual-machine:/home# docker attach 3e26eda4d0d9</span><br><span class=\"line\">[root@3e26eda4d0d9 /]#</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> 在容器内新建一个文件</span></span><br><span class=\"line\">[root@3e26eda4d0d9 /]# touch test.java</span><br><span class=\"line\">[root@3e26eda4d0d9 /]# ls</span><br><span class=\"line\">bin  etc   lib\t  lost+found  mnt  proc  run   srv  test.java  usr</span><br><span class=\"line\">dev  home  lib64  media       opt  root  sbin  sys  tmp        var</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> 从文件拷贝到主机</span></span><br><span class=\"line\">root@kongzhou-virtual-machine:/home/kongzhou# docker cp 3e26eda4d0d9:/test.java /home</span><br><span class=\"line\">root@kongzhou-virtual-machine:/home/kongzhou# cd /home</span><br><span class=\"line\">root@kongzhou-virtual-machine:/home# ls</span><br><span class=\"line\">kongzhou  test.java</span><br></pre></td></tr></table></figure>\n\n\n\n\n\n\n\n","categories":["学习历程"],"tags":[]},{"title":"pwn四种基本保护","url":"https://kongzhou.net/2020/12/03/pwn四种基本保护/","content":"<h2 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h2><p>学习pwn，了解到的四种basic protection</p>\n<h2 id=\"1-Stack-Guard\"><a href=\"#1-Stack-Guard\" class=\"headerlink\" title=\"1.Stack Guard\"></a>1.Stack Guard</h2><p>• 做完function prologue①的时候回将随机生成的乱数压入stack中，function return前会检查乱数是否又被更动过，若发现被更动则立即结束程式<br>• 又称canary 金丝雀②</p>\n<p>注释：<br>①function prologue：移动 RSP 和保存寄存器的动作一般处在函数的开头，叫做 function prologue<br>②canary：看视频讲的有一个了解，在煤矿中有毒或易燃气体的存在，常引起井下爆炸，或发生煤矿工人中毒的事故，而金丝雀对于这类气体很敏感，矿井中存在的微量有毒气体，在对矿工尚未造成威胁时，金丝雀就会出现窒息中毒的症状。所以，一些矿工在下井时带着金丝雀，将它们作为“生物报警器”。</p>\n<h2 id=\"2-DEP\"><a href=\"#2-DEP\" class=\"headerlink\" title=\"2.DEP\"></a>2.DEP</h2><p>• Data execution prevention 数据执行保护<br>• 可执行的地方不能写，可写的地方不能执行<br>• 又称NX<br><img src=\"https://img-blog.csdnimg.cn/20201203115327639.png?x-oss-process=image,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTc1OTY2OA==,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n<h2 id=\"3-ASLR\"><a href=\"#3-ASLR\" class=\"headerlink\" title=\"3.ASLR\"></a>3.ASLR</h2><p>• Address Space Layout Randomization 地址空间布局随机化<br>• 每次程序执行时stack、heap、library 位置都不一样<br>• 一种针对缓冲区溢出的安全保护技术，通过对堆、栈、共享库映射等线性区布局的随机化，通过增加攻击者预测目的地址的难度，防止攻击者直接定位攻击代码位置，达到阻止溢出攻击的目的</p>\n<h2 id=\"4-PIE\"><a href=\"#4-PIE\" class=\"headerlink\" title=\"4.PIE\"></a>4.PIE</h2><p>• Position Independent Execution<br>• 开启后，code和data也还会ASLR</p>\n","categories":["学习历程"],"tags":[]},{"title":"gdb的基本使用","url":"https://kongzhou.net/2020/12/02/gdb的基本使用/","content":"<hr style=\" border:solid; width:100px; height:1px;\" color=#000000 size=1\">\n\n<h1 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h1><p><font color=#999AAA >学习对gdb的简单使用</font></p>\n<h1 id=\"一、gdb是什么？\"><a href=\"#一、gdb是什么？\" class=\"headerlink\" title=\"一、gdb是什么？\"></a>一、gdb是什么？</h1><p><font color=#999AAA >UNIX及UNIX-like下的调试工具</p>\n<h1 id=\"二、简单使用命令\"><a href=\"#二、简单使用命令\" class=\"headerlink\" title=\"二、简单使用命令\"></a>二、简单使用命令</h1><h2 id=\"1-运行run\"><a href=\"#1-运行run\" class=\"headerlink\" title=\"1.运行run\"></a>1.运行run</h2><p>两种运行方式：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">r filename</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">gdb //运行gdb</span><br><span class=\"line\">file filename</span><br></pre></td></tr></table></figure>\n<h2 id=\"2-退出quit\"><a href=\"#2-退出quit\" class=\"headerlink\" title=\"2.退出quit\"></a>2.退出quit</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">q //退出gdb</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"3-设置删除断点break-delete\"><a href=\"#3-设置删除断点break-delete\" class=\"headerlink\" title=\"3.设置删除断点break/delete\"></a>3.设置删除断点break/delete</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">b main //在main函数下断点</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">b filename:9 //在第九行下断点</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">d //删除全部断点</span><br><span class=\"line\">d number //删除指点断点</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"4-继续执行continue\"><a href=\"#4-继续执行continue\" class=\"headerlink\" title=\"4.继续执行continue\"></a>4.继续执行continue</h2><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">c <span class=\"comment\">//到达断点后继续执行</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"5-单步执行next\"><a href=\"#5-单步执行next\" class=\"headerlink\" title=\"5.单步执行next\"></a>5.单步执行next</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">n //单步调试，C语言级</span><br><span class=\"line\">ni //针对汇编，汇编级</span><br><span class=\"line\">按enter可重复上一条指令</span><br></pre></td></tr></table></figure>\n<h2 id=\"6-进入函数step\"><a href=\"#6-进入函数step\" class=\"headerlink\" title=\"6.进入函数step\"></a>6.进入函数step</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">s //在单步执行时，遇到函数调用，可进入函数</span><br><span class=\"line\">si //汇编级</span><br></pre></td></tr></table></figure>\n<h2 id=\"7-查看代码list\"><a href=\"#7-查看代码list\" class=\"headerlink\" title=\"7.查看代码list\"></a>7.查看代码list</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">l //显示接下来执行的10行代码</span><br></pre></td></tr></table></figure>\n<h2 id=\"8-查看变量值print\"><a href=\"#8-查看变量值print\" class=\"headerlink\" title=\"8.查看变量值print\"></a>8.查看变量值print</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">p a //查看变量值</span><br><span class=\"line\">p main //查看main函数，是地址</span><br><span class=\"line\">p arr //查看数组</span><br><span class=\"line\">p arr[1] //查看数组中第1位</span><br></pre></td></tr></table></figure>\n<h2 id=\"9-查看信息info\"><a href=\"#9-查看信息info\" class=\"headerlink\" title=\"9.查看信息info\"></a>9.查看信息info</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">i b //查看断点</span><br><span class=\"line\">i r //查看寄存器</span><br></pre></td></tr></table></figure>\n<h2 id=\"10-分窗口\"><a href=\"#10-分窗口\" class=\"headerlink\" title=\"10.分窗口\"></a>10.分窗口</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ctrl-x-a //转换TUI界面</span><br><span class=\"line\">ctrl-x-2 //打开的是汇编窗口</span><br></pre></td></tr></table></figure>\n\n\n","categories":["学习历程"],"tags":[]},{"title":"IDA简单使用","url":"https://kongzhou.net/2020/11/19/IDA简单使用/","content":"<h3 id=\"0x00-前言\"><a href=\"#0x00-前言\" class=\"headerlink\" title=\"0x00 前言\"></a>0x00 前言</h3><p>写这个是因为看了学长发的PPT，发现自己对IDA的许多功能并不是那么的熟悉，所以就把PPT上边的内容手打下来，加深印象，方便查看</p>\n<h3 id=\"0x01-IDA-Pro简介\"><a href=\"#0x01-IDA-Pro简介\" class=\"headerlink\" title=\"0x01 IDA Pro简介\"></a>0x01 IDA Pro简介</h3><p>•交互式反汇编器专业版（Interactive Disassembler Professional），人们常称其为IDA Pro，或简称为IDA。是目前最棒的一个静态反编译软件，为众多0day世界的成员和ShellCode安全分析人士不可缺少的利器！</p>\n<p>•IDA Pro是一款交互式的，可编程的，可扩展的，多处理器的，交叉Windows或Linux WinCE MacOS平台主机来分析程序， 被公认为最好的花钱可以买到的逆向工程利器。IDA Pro已经成为事实上的分析敌意代码的标准并让其自身迅速成为攻击研究领域的重要工具。它支持数十种CPU指令集其中包括Intel x86，x64，MIPS，PowerPC，ARM，Z80，68000，c8051等等。</p>\n<p>上面是百度对IDA的简介</p>\n<h3 id=\"0x02-IDA启动\"><a href=\"#0x02-IDA启动\" class=\"headerlink\" title=\"0x02 IDA启动\"></a>0x02 IDA启动</h3><p>• IDA负责反编译32位可执行文件，IDA64负责编译64位可执行文件<br>• 注意，分析文件时，必须把对应的文件放到对应的IDA中分析，否则会出现不能反编译的情况<br><img src=\"https://img-blog.csdnimg.cn/20201119151946532.png#pic_center\" alt=\"在这里插入图片描述\"><br>• IDA打开后如上图所示<br>• 其中<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;•”New”选项表明反编译新的可执行文件<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;•”Go”选项表明直接进入主页面<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;•”Previous”选项表明加载已反编译的文件选项</p>\n<h3 id=\"0x03-加载可执行文件\"><a href=\"#0x03-加载可执行文件\" class=\"headerlink\" title=\"0x03 加载可执行文件\"></a>0x03 加载可执行文件</h3><p><img src=\"https://img-blog.csdnimg.cn/20201119154432494.png?x-oss-process=image,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTc1OTY2OA==,size_16,color_FFFFFF,t_70#pic_center\" alt=\"在这里插入图片描述\"><br>• 上图界面可识别当前加载的可执行文件类型，这里已识别出文件为EXE可执行文件格式<br>• 下面”Processor type”选项表明当前处理器类型，IDA能够识别的文件类型可依照IDA默认选项加载可执行文件，如果是IDA不能识别的二进制代码，例如ShellCode代码，可选择”Binary file”方式加载<br><img src=\"https://img-blog.csdnimg.cn/20201119155341700.png?x-oss-process=image,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTc1OTY2OA==,size_16,color_FFFFFF,t_70#pic_center\" alt=\"在这里插入图片描述\"></p>\n<p>• 一旦选择”Binary file”方式加载文件，则需要用户手动填入加载段地址和相对偏移，对应上图”Loading segment”和”Loading offset”选项。该种方式主要应用场景为：分析动态保存的二进制代码、ShellCode二进制代码分析等。<br>•  选择”Binary file”方式加载文件，IDA不会自动分析代码，用户需根据具体需求自行反汇编二进制代码</p>\n<h3 id=\"0x04-IDA主要功能界面\"><a href=\"#0x04-IDA主要功能界面\" class=\"headerlink\" title=\"0x04 IDA主要功能界面\"></a>0x04 IDA主要功能界面<img src=\"https://img-blog.csdnimg.cn/20201119173454910.png?x-oss-process=image,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTc1OTY2OA==,size_16,color_FFFFFF,t_70#pic_center\" alt=\"在这里插入图片描述\"></h3><h3 id=\"0x05-IDA分析可执行文件\"><a href=\"#0x05-IDA分析可执行文件\" class=\"headerlink\" title=\"0x05 IDA分析可执行文件\"></a>0x05 IDA分析可执行文件</h3><p>• IDA会对可识别的文件进行代码反编译，反编译过程一句文件大小而定，例如：几百KB大小的文件，IDA可短时间分析完毕；几M或更大的文件，IDA则自动分析一段时间，越大的文件IDA分析的时间通常会越长(因为可执行文件越大，意味着可执行文件中代码段越大，IDA分析时间自然会更长)。<br>• 判断IDA分析完毕的方法有：<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;•下图IDA的”Output Window”窗口输出”The initial autoanalysis has been finished”日志时，则说明IDA已分析完毕，对应Log如下图所示<br><img src=\"https://img-blog.csdnimg.cn/20201119190428249.png?x-oss-process=image,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTc1OTY2OA==,size_16,color_FFFFFF,t_70#pic_center\" alt=\"在这里插入图片描述\"><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;•上图中IDA界面左下角AU处于”idie”状态时，也表明IDA分析完毕<br>• 通过以上方式可观察到IDA是否分析完毕。IDA分析完毕之后会将光标停留在需分析的可执行文件入口函数处。如下图分析程序，程序分析完毕之后，IDA把当前光标停留在下图main函数中。<br><img src=\"https://img-blog.csdnimg.cn/20201119191150114.png?x-oss-process=image,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTc1OTY2OA==,size_16,color_FFFFFF,t_70#pic_center\" alt=\"在这里插入图片描述\"></p>\n<h3 id=\"0x06-IDA功能界面介绍\"><a href=\"#0x06-IDA功能界面介绍\" class=\"headerlink\" title=\"0x06 IDA功能界面介绍\"></a>0x06 IDA功能界面介绍</h3><p>•  经过IDA的加载和分析过程，用户便可根据需求自行逆向分析。进行逆向分析之前需了解IDA界面有哪些功能，包括：导航条、反汇编窗口、其他辅助分析窗口。<br><img src=\"https://img-blog.csdnimg.cn/20201119193113163.png?x-oss-process=image,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTc1OTY2OA==,size_16,color_FFFFFF,t_70#pic_center\" alt=\"在这里插入图片描述\"></p>\n<p>• 导航栏<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;• IDA主界面中存在一项颜色各异的导航条，导航条如下图<br><img src=\"https://img-blog.csdnimg.cn/20201119193641756.png#pic_center\" alt=\"在这里插入图片描述\"></p>\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;• 蓝色：表示常规的指令函数，绝大部分为用户编写的代码<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;• 黑色：表示间隙部分内容，可执行文件中包含多个节段<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;• 银白色：表示数据项部分内容，可执行文件中会包含大量数据<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;• 粉色：表示外部导入函数，通常可执行文件会导入外部的库函数<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;• 暗黄色：表示IDA未识别的内容，需要用户根据需求自行分析<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;• 有个青色，我搜的是库函数</p>\n<p>• 反汇编窗口(IDA View-A)<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;• 反汇编窗口属于逆向分析过程中关注频率最高的窗口，通过此窗口可以逆向分析反汇编代码。对应下图<br><img src=\"https://img-blog.csdnimg.cn/20201119202614240.png?x-oss-process=image,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTc1OTY2OA==,size_16,color_FFFFFF,t_70#pic_center\" alt=\"在这里插入图片描述\"><br>• 反汇编窗口可分为两种模式，分别为：默认模式和流程模式。（空格键转换）<br>• 默认模式<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;• 反汇编窗口默认模式属于使用频率很高的常规模式，对应界面如下图所示：<br><img src=\"https://img-blog.csdnimg.cn/20201119203058740.png?x-oss-process=image,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTc1OTY2OA==,size_16,color_FFFFFF,t_70#pic_center\" alt=\"在这里插入图片描述\"></p>\n<p>•  图形模式<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;• 反汇编窗口默认模式中按下键盘的”空格键”便转入图形模式，图形模式界面如下图所示：<br><img src=\"https://img-blog.csdnimg.cn/20201119203316696.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTc1OTY2OA==,size_16,color_FFFFFF,t_70#pic_center\" alt=\"在这里插入图片描述\"><br>• 其他辅助分析窗口<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;• 除了提供反汇编分析窗口，IDA默认界面提供<strong>二进制查看编辑窗口、函数窗口、结构窗口、枚举类型窗口、导入函数窗口、导出函数窗口</strong>。不同窗口在分析节段起到不同作用。下面介绍其他辅助分析窗口功能的应用场景。<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;• 二进制窗口（Hex View-1）可支持用户查看可执行文件对应相对偏移的二进制机器码数据。如下图所示：</p>\n<p><img src=\"https://img-blog.csdnimg.cn/20201119205020314.png?x-oss-process=image,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTc1OTY2OA==,size_16,color_FFFFFF,t_70#pic_center\" alt=\"在这里插入图片描述\"><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;• 二进制窗口总共为三部分，三部分内容分别位于下图左、中、右，三种含义分别为：<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;• 左边数据：表示二进制数据对应的内存相对偏移<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;• 中间数据：表示内存中数据的具体内容<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;• 右边数据：表示内存数据的字符串显示，该功能可辅助读者快速识别字符串内容<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;• 用户可在二进制查看窗口编辑二进制数据，从而满足篡改数据的测试需求<br><img src=\"https://img-blog.csdnimg.cn/20201119205120820.png?x-oss-process=image,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTc1OTY2OA==,size_16,color_FFFFFF,t_70#pic_center\" alt=\"在这里插入图片描述\"><br>• 函数窗口<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;• IDA提供函数窗口供用户查找函数信息，该窗口界面如图：<br><img src=\"https://img-blog.csdnimg.cn/20201119205931887.png#pic_center\" alt=\"在这里插入图片描述\"><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;• 在窗口按下”CTRL + F”快捷键便可根据需求搜索函数名，快速定位函数名方式可提高逆向分析效率</p>\n<p>• 结构窗口（Structures）<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;• 结构窗口提供用户查询已定义的结构体，同时IDA可识别出可执行文件包含的部分结构体数据，结构窗口如下所示：<br><img src=\"https://img-blog.csdnimg.cn/2020111921035547.png?x-oss-process=image,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTc1OTY2OA==,size_16,color_FFFFFF,t_70#pic_center\" alt=\"在这里插入图片描述\"><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;• 结构窗口可通过快捷键”+”、”-“展开和收缩结构体，IDA结构窗口支持用户自定义结构体</p>\n<p> • 导入函数窗口（Imports）<br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;• IDA提供导入函数窗口，用于可在导入函数窗口中查看当前可执行文件导入哪些外部函数库及函数，导入函数窗口如下图所示：<br> <img src=\"https://img-blog.csdnimg.cn/20201119210812369.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTc1OTY2OA==,size_16,color_FFFFFF,t_70#pic_center\" alt=\"在这里插入图片描述\"><br>• 导出函数窗口（Exports）<br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;• IDA的导出函数窗口提供可执行文件导出函数信息，对应的带出函数窗口如下图所示：<br> <img src=\"https://img-blog.csdnimg.cn/20201119211056636.png?x-oss-process=image,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTc1OTY2OA==,size_16,color_FFFFFF,t_70#pic_center\" alt=\"在这里插入图片描述\"></p>\n<h3 id=\"0x07-常用快捷键\"><a href=\"#0x07-常用快捷键\" class=\"headerlink\" title=\"0x07 常用快捷键\"></a>0x07 常用快捷键</h3><table border=\"1\">\n<tr>\n  <td>按键</td>\n  <td>用处</td>\n</tr>\n<tr>\n  <td>F5</td>\n  <td>将汇编转换成伪代码 </td>\n</tr>\n<tr>\n  <td>Shift + F12 </td>\n  <td>查看字符串 </td>\n</tr>\n<tr>\n  <td>X </td>\n  <td>查看交叉引用 </td>\n</tr>\n<tr>\n  <td>Y </td>\n  <td>修改变量类型 </td>\n</tr>\n<tr>\n  <td>H,R,A </td>\n  <td>转换数据类型 </td>\n</tr>\n<tr>\n  <td>C </td>\n  <td>转换为代码 </td>\n</tr>\n<tr>\n  <td>D </td>\n  <td>转换为数据 </td>\n</tr>\n<tr>\n  <td> </td>\n  <td> </td>\n</tr>\n</table>\n","categories":["学习历程"],"tags":[]},{"title":"一般术语解释(持续更新)","url":"https://kongzhou.net/2020/11/15/一般术语解释（持续更新）/","content":"<h3 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h3><p>看pwn入门视频，有许多属于不知道是什么意思，搜索记录一下</p>\n<h3 id=\"正文\"><a href=\"#正文\" class=\"headerlink\" title=\"正文\"></a>正文</h3><table border=\"1\">\n<tr>\n  <td>名称</td>\n  <td>解释</td>\n</tr>\n<tr>\n  <td>exp(Exploit) </td>\n  <td>漏洞利用，，一般是个demo(演示)程序</td>\n</tr>\n<tr>\n  <td>poc(Proof of Concept)</td>\n  <td>漏洞证明，一般是个样本，用来证明和复现</td>\n</tr>\n<tr>\n  <td>vul(Vulnerability)</td>\n  <td>泛指漏洞</td>\n</tr>\n<tr>\n  <td>shellcode</td>\n  <td>可提权代码（偷个小故事说明一下，缓冲区溢出攻击相当于一辆坦克，如果要攻破一座堡垒，那么总重要的是什么呢？就是炮弹，shellcode就相当于炮弹，没有打补丁的主机就相当于堡垒）</td>\n</tr>\n<tr>\n  <td>payload</td>\n  <td>有效供给负载，是包含在用于一次漏洞利用(exp)中的Shellcode的主要功能代码</td>\n</tr>\n<tr>\n  <td> </td>\n  <td> </td>\n</tr>\n<tr>\n  <td> </td>\n  <td> </td>\n</tr>\n<tr>\n  <td> </td>\n  <td> </td>\n</tr>\n</table>\n\n\n\n\n\n\n<p>参考：<a href=\"https://www.zhihu.com/question/26053378\">https://www.zhihu.com/question/26053378</a></p>\n","categories":["学习历程"],"tags":[]},{"title":"pwntools安装与简单使用（初学习持续更新）","url":"https://kongzhou.net/2020/11/15/pwntools安装与简单使用（初学习持续更新）/","content":"<p>小白一枚，初学轻喷</p>\n<h3 id=\"0x01-pwntools简介\"><a href=\"#0x01-pwntools简介\" class=\"headerlink\" title=\"0x01.pwntools简介\"></a>0x01.pwntools简介</h3><p>pwntools 是一款专门用于CTF Exploit的python库，能够很方便的进行本地与远程利用的切换，基本涵盖了pwn题利用脚本所需要的各种工具。</p>\n<h3 id=\"0x02-pwntools安装\"><a href=\"#0x02-pwntools安装\" class=\"headerlink\" title=\"0x02.pwntools安装\"></a>0x02.pwntools安装</h3><p>在Ubuntu中安装，这个是python2的，python3不能pip安装，还要安装其他东西，在这里就不详述了</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo pip install pwntools</span><br></pre></td></tr></table></figure>\n<h3 id=\"0x03-pwntools的常用模块\"><a href=\"#0x03-pwntools的常用模块\" class=\"headerlink\" title=\"0x03.pwntools的常用模块\"></a>0x03.pwntools的常用模块</h3><table border=\"1\">\n<tr>\n  <td>Pwnlib.asm</td>\n  <td>通过capstone进行汇编与反汇编，支持x86/x64/arm/mips/powerpc等基本上所有的主流平台</td>\n</tr>\n<tr>\n  <td>Pwnlib.dynelf</td>\n  <td>用于远程符号泄漏，通过leak数据来自动化定位程序中函数位置(极其实用)</td>\n</tr>\n<tr>\n  <td>Pwnlib.elf</td>\n  <td>对elf文件进行读写(实用方便)</td>\n</tr>\n<tr>\n  <td>Pwnlib.gdb</td>\n  <td>配合gdb进行调试</td>\n</tr>\n<tr>\n  <td>Pwnlib.memleak</td>\n  <td>用于内存泄漏，可拼接多次泄露出来的内存</td>\n</tr>\n<tr>\n  <td>Pwnlib.shellcraft</td>\n  <td>shellcode的生成器</td>\n</tr>\n<tr>\n  <td>Pwnlib.tubes</td>\n  <td>包括tubes.sock, tubes.process, Pwnlib.tubes.ssh, tubes.serialtube，分别适用于不同场景的PIPE</td>\n</tr>\n</tr>\n  <td>Pwnlib.utils</td>\n  <td>一些实用的小功能，例如CRC计算，cyclic pattern等</td>\n</tr>\n<tr>\n  <td>Pwnlib.rop</td>\n  <td>rop生成工具，可以直接生成32位rop</td>\n</tr>\n<tr>\n  <td> </td>\n  <td> </td>\n</tr>\n</table>\n\n\n\n\n\n\n\n<h3 id=\"0x04pwntools的简单使用\"><a href=\"#0x04pwntools的简单使用\" class=\"headerlink\" title=\"0x04pwntools的简单使用\"></a>0x04pwntools的简单使用</h3><h4 id=\"用于导入pwntools模块\"><a href=\"#用于导入pwntools模块\" class=\"headerlink\" title=\"用于导入pwntools模块\"></a>用于导入pwntools模块</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">from pwn import *</span><br></pre></td></tr></table></figure>\n<h4 id=\"连接\"><a href=\"#连接\" class=\"headerlink\" title=\"连接\"></a>连接</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">本地:p = porcess(<span class=\"string\">&quot;./文件名&quot;</span>)</span><br><span class=\"line\">远程:p = remote(<span class=\"string\">&quot;地址&quot;</span>,端口)</span><br><span class=\"line\">关闭连接:close()  </span><br><span class=\"line\"><span class=\"comment\"># p是看个人的</span></span><br></pre></td></tr></table></figure>\n\n<h4 id=\"接收数据\"><a href=\"#接收数据\" class=\"headerlink\" title=\"接收数据\"></a>接收数据</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">recv()</span><br><span class=\"line\">recvall()</span><br><span class=\"line\">recvline(<span class=\"string\">&quot;World&quot;</span>)</span><br><span class=\"line\"><span class=\"comment\"># recv()接收指定个字节</span></span><br><span class=\"line\"><span class=\"comment\"># recvall()会一直接收到文件EOF(文件结束符)</span></span><br><span class=\"line\"><span class=\"comment\"># recvline()接收到指定数据结束</span></span><br></pre></td></tr></table></figure>\n<p>asm()函数接收一个字符串为参数，得到汇编码的机器代码</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">asm(shellcraft.sh)</span><br></pre></td></tr></table></figure>\n<p>shellcraft模块是shellcode的模块，包含一些生成shellcode的函数<br>例：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1. &gt;&gt;&gt;asm(<span class=\"string\">&#x27;mov eax, 0&#x27;</span>)</span><br><span class=\"line\">2. <span class=\"string\">&#x27;\\xb8\\x00\\x00\\x00\\x00&#x27;</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"Context设置\"><a href=\"#Context设置\" class=\"headerlink\" title=\"Context设置\"></a>Context设置</h4><p><strong>context</strong>是pwntools用来设置环境的功能。一些二进制文件的情况不同，设置环境来正常运行exp，例如一些时候需要进行汇编，32位汇编和64位汇编不同，若不设置context可能会导致一些问题</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">context(os=<span class=\"string\">&#x27;linux&#x27;</span>, arch=<span class=\"string\">&#x27;amd64&#x27;</span>, log_level=<span class=\"string\">&#x27;debug&#x27;</span>)</span><br></pre></td></tr></table></figure>\n<p>1.os是设置系统为Linux系统<br>2.arch是设置架构为amd64，可以简单的认为设置为64位的模式，32位对应’i386’<br>3.log_level设置<strong>日志输出等级</strong>为debug，这句话在调试的时候一般会设置，这样pwntools会将完整的io过程都打印下来，使得调试更加方便，可以避免在完成CTF题目时出现一些和IO相关的错误<br><strong>补充：</strong><br>1.日志输出等级由高到低：debug&lt;info&lt;error&lt;fatal<br>2.<br>info 用于打印程序应该出现的正常状态信息，便于追踪定位<br>warn 表明系统出现一些轻微错误，但不影响运行和使用<br>error 表面出现了系统错误和异常，无法正常完成目标操作</p>\n<h4 id=\"数据打包\"><a href=\"#数据打包\" class=\"headerlink\" title=\"数据打包\"></a>数据打包</h4><p>p32/p64:打包一个整数，分别为32位或64位<br>u32/u64:解包一个字符串，得到整数<br>p-&gt;pack 打包<br>u-&gt;unpack 解包 </p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">payload = p32(0xabcdefgh)</span><br><span class=\"line\"><span class=\"comment\"># 打包一个32位的整数</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"数据输出\"><a href=\"#数据输出\" class=\"headerlink\" title=\"数据输出\"></a>数据输出</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">some_str = <span class=\"string\">&quot;Hello_world&quot;</span></span><br><span class=\"line\">log.info(some_str)</span><br></pre></td></tr></table></figure>\n<p>info位log等级，Logger就是日志记录器</p>\n<p>参考：<a href=\"https://blog.csdn.net/weixin_46436680/article/details/105784528\">https://blog.csdn.net/weixin_46436680/article/details/105784528</a><br><a href=\"http://brieflyx.me/2015/python-module/pwntools-intro/\">http://brieflyx.me/2015/python-module/pwntools-intro/</a><br><a href=\"https://www.jianshu.com/p/8d6b605eb7fc\">https://www.jianshu.com/p/8d6b605eb7fc</a><br><a href=\"https://blog.csdn.net/qq_29343201/article/details/51337025?utm_source=app\">https://blog.csdn.net/qq_29343201/article/details/51337025?utm_source=app</a></p>\n","categories":["学习历程"],"tags":[]},{"title":"Hello World","url":"https://kongzhou.net/2020/11/08/hello-world/","content":"<p>Welcome to <a href=\"https://hexo.io/\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\">GitHub</a>.</p>\n<h2 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h2><h3 id=\"Create-a-new-post\"><a href=\"#Create-a-new-post\" class=\"headerlink\" title=\"Create a new post\"></a>Create a new post</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo new <span class=\"string\">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\">Writing</a></p>\n<h3 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo server</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/server.html\">Server</a></p>\n<h3 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo generate</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\">Generating</a></p>\n<h3 id=\"Deploy-to-remote-sites\"><a href=\"#Deploy-to-remote-sites\" class=\"headerlink\" title=\"Deploy to remote sites\"></a>Deploy to remote sites</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo deploy</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/one-command-deployment.html\">Deployment</a></p>\n","categories":[],"tags":[]},{"title":"link","url":"https://kongzhou.net/link/index.html","content":"<p>link:</p>\n<ul>\n<li>name: m0re<br>info:<br>url: <a href=\"https://zxcv0221.github.io/\">https://zxcv0221.github.io/</a></li>\n</ul>\n","categories":[],"tags":[]},{"title":"search","url":"https://kongzhou.net/search/index.html","content":"","categories":[],"tags":[]},{"title":"category","url":"https://kongzhou.net/category/index.html","content":"","categories":[],"tags":[]},{"title":"tag","url":"https://kongzhou.net/tag/index.html","content":"","categories":[],"tags":[]},{"title":"about","url":"https://kongzhou.net/about/index.html","content":"","categories":[],"tags":[]}]