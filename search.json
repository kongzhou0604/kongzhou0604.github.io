[{"title":"一般术语解释(持续更新)","url":"https://kongzhou.net/2020/11/15/一般术语解释（持续更新）/","content":"<h3 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h3><p>看pwn入门视频，有许多属于不知道是什么意思，搜索记录一下</p>\n<h3 id=\"正文\"><a href=\"#正文\" class=\"headerlink\" title=\"正文\"></a>正文</h3><p>|名称  |解释 |<br>|–|–|–|<br>|exp  (Exploit)  |漏洞利用，，一般是个demo(演示)程序 |<br>|poc  (Proof of Concept) |漏洞证明，一般是个样本，用来证明和复现 |<br>| vul (Vulnerability )泛指漏洞 |<br>|shellcode   |可提权代码（偷个小故事说明一下，缓冲区溢出攻击相当于一辆坦克，如果要攻破一座堡垒，那么总重要的是什么呢？就是炮弹，shellcode就相当于炮弹，没有打补丁的主机就相当于堡垒） |<br>| payload |  |有效供给负载，是包含在用于一次漏洞利用(exp)中的Shellcode的主要功能代码|<br>|  |  | |<br>|  |  | |<br>|  |  | |<br>|  |  | |<br>|  |  | |<br>|  |  | |</p>\n<p>参考：<a href=\"https://www.zhihu.com/question/26053378\">https://www.zhihu.com/question/26053378</a></p>\n","categories":[],"tags":["学习历程"]},{"title":"pwntools安装与简单使用（初学习持续更新）","url":"https://kongzhou.net/2020/11/15/pwntools安装与简单使用（初学习持续更新）/","content":"<p>小白一枚，初学轻喷</p>\n<h3 id=\"0x01-pwntools简介\"><a href=\"#0x01-pwntools简介\" class=\"headerlink\" title=\"0x01.pwntools简介\"></a>0x01.pwntools简介</h3><p>pwntools 是一款专门用于CTF Exploit的python库，能够很方便的进行本地与远程利用的切换，基本涵盖了pwn题利用脚本所需要的各种工具。</p>\n<h3 id=\"0x02-pwntools安装\"><a href=\"#0x02-pwntools安装\" class=\"headerlink\" title=\"0x02.pwntools安装\"></a>0x02.pwntools安装</h3><p>在Ubuntu中安装，这个是python2的，python3不能pip安装，还要安装其他东西，在这里就不详述了</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo pip install pwntools</span><br></pre></td></tr></table></figure>\n<h3 id=\"0x03-pwntools的常用模块\"><a href=\"#0x03-pwntools的常用模块\" class=\"headerlink\" title=\"0x03.pwntools的常用模块\"></a>0x03.pwntools的常用模块</h3><p>Pwnlib.asm :通过capstone进行汇编与反汇编，支持x86/x64/arm/mips/powerpc等基本上所有的主流平台<br>Pwnlib.dynelf : 用于远程符号泄漏，通过leak数据来自动化定位程序中函数位置(极其实用)<br>Pwnlib.elf : 对elf文件进行读写(实用方便)<br>Pwnlib.gdb : 配合gdb进行调试<br>Pwnlib.memleak : 用于内存泄漏，可拼接多次泄露出来的内存<br>Pwnlib.shellcraft : shellcode的生成器<br>Pwnlib.tubes : 包括tubes.sock, tubes.process, Pwnlib.tubes.ssh, tubes.serialtube，分别适用于不同场景的PIPE<br>Pwnlib.utils : 一些实用的小功能，例如CRC计算，cyclic pattern等<br>Pwnlib.rop<br>rop生成工具，可以直接生成32位rop</p>\n<h3 id=\"0x04pwntools的简单使用\"><a href=\"#0x04pwntools的简单使用\" class=\"headerlink\" title=\"0x04pwntools的简单使用\"></a>0x04pwntools的简单使用</h3><h4 id=\"用于导入pwntools模块\"><a href=\"#用于导入pwntools模块\" class=\"headerlink\" title=\"用于导入pwntools模块\"></a>用于导入pwntools模块</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">from pwn import *</span><br></pre></td></tr></table></figure>\n<h4 id=\"连接\"><a href=\"#连接\" class=\"headerlink\" title=\"连接\"></a>连接</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">本地:p = porcess(<span class=\"string\">&quot;./文件名&quot;</span>)</span><br><span class=\"line\">远程:p = remote(<span class=\"string\">&quot;地址&quot;</span>,端口)</span><br><span class=\"line\">关闭连接:close()  </span><br><span class=\"line\"><span class=\"comment\"># p是看个人的</span></span><br></pre></td></tr></table></figure>\n\n<h4 id=\"接收数据\"><a href=\"#接收数据\" class=\"headerlink\" title=\"接收数据\"></a>接收数据</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">recv()</span><br><span class=\"line\">recvall()</span><br><span class=\"line\">recvline(<span class=\"string\">&quot;World&quot;</span>)</span><br><span class=\"line\"><span class=\"comment\"># recv()接收指定个字节</span></span><br><span class=\"line\"><span class=\"comment\"># recvall()会一直接收到文件EOF(文件结束符)</span></span><br><span class=\"line\"><span class=\"comment\"># recvline()接收到指定数据结束</span></span><br></pre></td></tr></table></figure>\n<p>asm()函数接收一个字符串为参数，得到汇编码的机器代码</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">asm(shellcraft.sh)</span><br></pre></td></tr></table></figure>\n<p>shellcraft模块是shellcode的模块，包含一些生成shellcode的函数<br>例：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1. &gt;&gt;&gt;asm(<span class=\"string\">&#x27;mov eax, 0&#x27;</span>)</span><br><span class=\"line\">2. <span class=\"string\">&#x27;\\xb8\\x00\\x00\\x00\\x00&#x27;</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"Context设置\"><a href=\"#Context设置\" class=\"headerlink\" title=\"Context设置\"></a>Context设置</h4><p><strong>context</strong>是pwntools用来设置环境的功能。一些二进制文件的情况不同，设置环境来正常运行exp，例如一些时候需要进行汇编，32位汇编和64位汇编不同，若不设置context可能会导致一些问题</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">context(os=<span class=\"string\">&#x27;linux&#x27;</span>, arch=<span class=\"string\">&#x27;amd64&#x27;</span>, log_level=<span class=\"string\">&#x27;debug&#x27;</span>)</span><br></pre></td></tr></table></figure>\n<p>1.os是设置系统为Linux系统<br>2.arch是设置架构为amd64，可以简单的认为设置为64位的模式，32位对应’i386’<br>3.log_level设置<strong>日志输出等级</strong>为debug，这句话在调试的时候一般会设置，这样pwntools会将完整的io过程都打印下来，使得调试更加方便，可以避免在完成CTF题目时出现一些和IO相关的错误<br><strong>补充：</strong><br>1.日志输出等级由高到低：debug&lt;info&lt;error&lt;fatal<br>2.<br>info 用于打印程序应该出现的正常状态信息，便于追踪定位<br>warn 表明系统出现一些轻微错误，但不影响运行和使用<br>error 表面出现了系统错误和异常，无法正常完成目标操作</p>\n<h4 id=\"数据打包\"><a href=\"#数据打包\" class=\"headerlink\" title=\"数据打包\"></a>数据打包</h4><p>p32/p64:打包一个整数，分别为32位或64位<br>u32/u64:解包一个字符串，得到整数<br>p-&gt;pack 打包<br>u-&gt;unpack 解包 </p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">payload = p32(0xabcdefgh)</span><br><span class=\"line\"><span class=\"comment\"># 打包一个32位的整数</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"数据输出\"><a href=\"#数据输出\" class=\"headerlink\" title=\"数据输出\"></a>数据输出</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">some_str = <span class=\"string\">&quot;Hello_world&quot;</span></span><br><span class=\"line\">log.info(some_str)</span><br></pre></td></tr></table></figure>\n<p>info位log等级，Logger就是日志记录器</p>\n<p>参考：<a href=\"https://blog.csdn.net/weixin_46436680/article/details/105784528\">https://blog.csdn.net/weixin_46436680/article/details/105784528</a><br><a href=\"http://brieflyx.me/2015/python-module/pwntools-intro/\">http://brieflyx.me/2015/python-module/pwntools-intro/</a><br><a href=\"https://www.jianshu.com/p/8d6b605eb7fc\">https://www.jianshu.com/p/8d6b605eb7fc</a><br><a href=\"https://blog.csdn.net/qq_29343201/article/details/51337025?utm_source=app\">https://blog.csdn.net/qq_29343201/article/details/51337025?utm_source=app</a></p>\n","categories":[],"tags":["学习历程"]},{"title":"Hello World","url":"https://kongzhou.net/2020/11/08/hello-world/","content":"<p>Welcome to <a href=\"https://hexo.io/\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\">GitHub</a>.</p>\n<h2 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h2><h3 id=\"Create-a-new-post\"><a href=\"#Create-a-new-post\" class=\"headerlink\" title=\"Create a new post\"></a>Create a new post</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo new <span class=\"string\">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\">Writing</a></p>\n<h3 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo server</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/server.html\">Server</a></p>\n<h3 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo generate</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\">Generating</a></p>\n<h3 id=\"Deploy-to-remote-sites\"><a href=\"#Deploy-to-remote-sites\" class=\"headerlink\" title=\"Deploy to remote sites\"></a>Deploy to remote sites</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo deploy</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/one-command-deployment.html\">Deployment</a></p>\n","categories":[],"tags":[]},{"title":"link","url":"https://kongzhou.net/link/index.html","content":"<p>link:</p>\n<ul>\n<li>name: m0re<br>info:<br>url: <a href=\"https://zxcv0221.github.io/\">https://zxcv0221.github.io/</a></li>\n</ul>\n","categories":[],"tags":[]},{"title":"search","url":"https://kongzhou.net/search/index.html","content":"","categories":[],"tags":[]},{"title":"category","url":"https://kongzhou.net/category/index.html","content":"","categories":[],"tags":[]},{"title":"tag","url":"https://kongzhou.net/tag/index.html","content":"","categories":[],"tags":[]},{"title":"about","url":"https://kongzhou.net/about/index.html","content":"","categories":[],"tags":[]}]